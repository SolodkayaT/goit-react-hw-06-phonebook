{"version":3,"sources":["components/SwitchTheme/SwitchTheme.module.css","components/App/App.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactListButton/ContactListButton.module.css","components/Filter/Filter.module.css","components/Layout/Layout.module.css","redux/contacts/contactsActions.js","components/ContactListButton/ContactListButton.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/context/themeContext.js","components/SwitchTheme/SwitchTheme.js","components/hok/withTheme.js","components/Layout/Layout.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/App/App.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","phone","payload","contact","id","uuid","removeContact","changeFilter","ContactListButton","onRemoveContact","className","styles","contactButton","type","onClick","ContactListItem","keys","onRemove","contactItem","key","defaultProps","connect","state","ownProps","item","contacts","items","find","dispatch","contactsActions","ContactList","map","normalizeFilter","filter","toLowerCase","includes","ContactForm","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","mapDispatchToProps","Filter","onChangeFilter","themeConfig","light","fontColor","bodyBg","dark","ThemeContext","React","createContext","SwitchTheme","onToggleTheme","label","switch","checked","slider","withTheme","WrappedComponent","theme","toggleTheme","bind","newTheme","Provider","toggle","Consumer","body","style","color","background","children","createReducer","contactsAction","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","section","title","document","getElementById"],"mappings":"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","file":"static/js/main.47874165.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"SwitchTheme_themeSelector__1B8O8\",\"label\":\"SwitchTheme_label__WC0od\",\"switch\":\"SwitchTheme_switch__2BQnD\",\"slider\":\"SwitchTheme_slider__in4ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\",\"section\":\"App_section__1zThd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3Q33w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"ContactListButton_contactButton__1hXYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Layout_body__2WDWT\"};","import { uuid } from \"uuidv4\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\", (name, phone) => ({\n  payload: {\n    contact: {\n      id: uuid(),\n      name,\n      phone\n    }\n  }\n}));\n\nconst removeContact = createAction(\"contacts/remove\");\nconst changeFilter = createAction(\"task/changeFilter\");\n\nexport default {\n  addContact,\n  removeContact,\n  changeFilter\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListButton.module.css\";\n\nexport default function ContactListButton({ onRemoveContact }) {\n  return (\n    <button\n      className={styles.contactButton}\n      type=\"button\"\n      onClick={onRemoveContact}\n    >\n      Delete\n    </button>\n  );\n}\n\nContactListButton.propTypes = {\n  onRemoveContact: PropTypes.func\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport styles from \"./ContactListItem.module.css\";\nimport ContactListButton from \"../ContactListButton/ContactListButton\";\n\nfunction ContactListItem({ name, phone, keys, onRemove }) {\n  return (\n    <>\n      <li className={styles.contactItem} key={keys}>\n        <p>\n          {name} : {phone}\n        </p>\n      </li>\n      <ContactListButton onRemoveContact={onRemove} />\n    </>\n  );\n}\n\nContactListItem.defaultProps = {\n  name: \"\",\n  phone: \"\",\n  keys: \"\"\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  keys: PropTypes.string,\n  onRemove: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\n  return { ...item };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemove: () => dispatch(contactsActions.removeContact(ownProps.id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { uuid } from \"uuidv4\";\nimport PropTypes from \"prop-types\";\n\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\n\nfunction ContactList({ contacts }) {\n  return (\n    <ul>\n      {contacts.map(({ id }) => (\n        <ContactListItem key={uuid()} id={id} />\n      ))}\n    </ul>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: []\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const normalizeFilter = filter.toLowerCase();\n  const visibleContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n  return {\n    contacts: visibleContacts\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n  static defaultProps = {\n    onAddContact: () => {}\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.hanleSubmit}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n            required\n          ></input>\n        </label>\n        <label className={styles.formLabel}>\n          Phone\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={phone}\n            placeholder=\"Enter phone\"\n            onChange={this.handleChange}\n            name=\"phone\"\n            required\n          ></input>\n        </label>\n        <button className={styles.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addContact\n};\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <input\n        className={styles.filter}\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      ></input>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\"\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\n\nexport const themeConfig = {\n  light: {\n    fontColor: \"black\",\n    bodyBg: \"white\"\n  },\n  dark: {\n    fontColor: \"white\",\n    bodyBg: \"black\"\n  }\n};\n\nconst ThemeContext = React.createContext(themeConfig);\nexport default ThemeContext;\n","import React from \"react\";\nimport styles from \"./SwitchTheme.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst SwitchTheme = ({ onToggleTheme }) => {\n  return (\n    <>\n      <span className={styles.label}>Theme</span>\n      <label className={styles.switch}>\n        <input\n          type=\"checkbox\"\n          checked={styles.checked}\n          onChange={e => onToggleTheme(e.target.value)}\n        />\n        <span className={styles.slider}></span>\n      </label>\n    </>\n  );\n};\nexport default SwitchTheme;\n\nSwitchTheme.propTypes = {\n  onToggleTheme: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport { themeConfig } from \"../context/themeContext\";\n\nconst withTheme = WrappedComponent => {\n  return class withTheme extends Component {\n    constructor() {\n      super();\n      this.state = {\n        theme: \"light\"\n      };\n      this.toggleTheme = this.toggleTheme.bind(this);\n    }\n\n    toggleTheme(newTheme) {\n      this.setState({\n        theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\n      });\n    }\n\n    render() {\n      return (\n        <ThemeContext.Provider value={themeConfig[this.state.theme]}>\n          <WrappedComponent {...this.props} toggle={e => this.toggleTheme(e)} />\n        </ThemeContext.Provider>\n      );\n    }\n  };\n};\n\nexport default withTheme;\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport SwitchTheme from \"../SwitchTheme/SwitchTheme\";\nimport withTheme from \"../hok/withTheme\";\nimport styles from \"./Layout.module.css\";\n\nclass Layout extends Component {\n  render() {\n    return (\n      <>\n        <ThemeContext.Consumer>\n          {theme => (\n            <div\n              className={styles.body}\n              style={{ color: theme.fontColor, background: theme.bodyBg }}\n            >\n              {this.props.toggle && (\n                <SwitchTheme onToggleTheme={e => this.props.toggle(e)} />\n              )}\n              {this.props.children}\n            </div>\n          )}\n        </ThemeContext.Consumer>\n      </>\n    );\n  }\n}\n\nexport default withTheme(Layout);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsAction from \"./contactsActions\";\n\nconst addContact = (state, action) => [...state, action.payload.contact];\nconst removeContact = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\nconst items = createReducer([], {\n  [contactsAction.addContact]: addContact,\n  [contactsAction.removeContact]: removeContact\n});\n\nconst filter = createReducer(\"\", {\n  [contactsAction.changeFilter]: (state, action) => action.payload\n});\n\nexport default combineReducers({\n  items,\n  filter\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer\n  }\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport store from \"./redux/store\";\nimport \"./css/main.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport Layout from \"../Layout/Layout\";\nimport styles from \"./App.module.css\";\n\nexport default function App() {\n  return (\n    <Layout>\n      <section className={styles.section}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </section>\n    </Layout>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};"],"sourceRoot":""}